// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eic_api_services.Models;

namespace eic_api_services.Migrations
{
    [DbContext(typeof(EICContexto))]
    [Migration("20220713163438_fix_Services_Playlist_info")]
    partial class fix_Services_Playlist_info
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("eic_api_services.Models.Escalas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FuncaoId")
                        .HasColumnType("int");

                    b.Property<int?>("MinistroId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("MinistroId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Escalas");
                });

            modelBuilder.Entity("eic_api_services.Models.Funcoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int?>("MinisterioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MinisterioId");

                    b.ToTable("Funcoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Voz",
                            MinisterioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Violão",
                            MinisterioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Guitarra",
                            MinisterioId = 1
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Bateria",
                            MinisterioId = 1
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Baixo",
                            MinisterioId = 1
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Teclado",
                            MinisterioId = 1
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Cajon",
                            MinisterioId = 1
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "Fotografia",
                            MinisterioId = 2
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "Projeção",
                            MinisterioId = 2
                        },
                        new
                        {
                            Id = 10,
                            Descricao = "Transmicao",
                            MinisterioId = 2
                        });
                });

            modelBuilder.Entity("eic_api_services.Models.Ministerios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Ministerios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Louvor"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Mídias"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Sonoplastia"
                        });
                });

            modelBuilder.Entity("eic_api_services.Models.Ministros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Ministros");
                });

            modelBuilder.Entity("eic_api_services.Models.Musicas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Artista")
                        .HasColumnType("longtext");

                    b.Property<string>("ColorBase")
                        .HasColumnType("longtext");

                    b.Property<string>("CoverLink")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Musicas");
                });

            modelBuilder.Entity("eic_api_services.Models.Platformas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Platformas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Spotify"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Youtube"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Deezer"
                        });
                });

            modelBuilder.Entity("eic_api_services.Models.Playlists_Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CrifraLink")
                        .HasColumnType("longtext");

                    b.Property<string>("LetraLink")
                        .HasColumnType("longtext");

                    b.Property<int?>("MusicaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("int");

                    b.Property<string>("Tom")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("VSLink")
                        .HasColumnType("longtext");

                    b.Property<string>("VozesLink")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MusicaId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Playlists_Info");
                });

            modelBuilder.Entity("eic_api_services.Models.Playlists_Plataforma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<int?>("PlatformaId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlatformaId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Playlists_Plataforma");
                });

            modelBuilder.Entity("eic_api_services.Models.Servicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("eic_api_services.Models.Escalas", b =>
                {
                    b.HasOne("eic_api_services.Models.Funcoes", "Funcao")
                        .WithMany()
                        .HasForeignKey("FuncaoId");

                    b.HasOne("eic_api_services.Models.Ministros", "Ministro")
                        .WithMany()
                        .HasForeignKey("MinistroId");

                    b.HasOne("eic_api_services.Models.Servicos", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId");

                    b.Navigation("Funcao");

                    b.Navigation("Ministro");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("eic_api_services.Models.Funcoes", b =>
                {
                    b.HasOne("eic_api_services.Models.Ministerios", "Ministerio")
                        .WithMany()
                        .HasForeignKey("MinisterioId");

                    b.Navigation("Ministerio");
                });

            modelBuilder.Entity("eic_api_services.Models.Playlists_Info", b =>
                {
                    b.HasOne("eic_api_services.Models.Musicas", "Musica")
                        .WithMany()
                        .HasForeignKey("MusicaId");

                    b.HasOne("eic_api_services.Models.Servicos", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId");

                    b.Navigation("Musica");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("eic_api_services.Models.Playlists_Plataforma", b =>
                {
                    b.HasOne("eic_api_services.Models.Platformas", "Platforma")
                        .WithMany()
                        .HasForeignKey("PlatformaId");

                    b.HasOne("eic_api_services.Models.Servicos", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId");

                    b.Navigation("Platforma");

                    b.Navigation("Servico");
                });
#pragma warning restore 612, 618
        }
    }
}
